# OneDrive File and Folder Downloader (Python)

Have you ever wanted to programmatically download files from your OneDrive account via Python? This code will give you a head-start.

## Basic components

| Filename                  | Role                                                                                                                                               |
| ------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------- |
| start.py                  | The loader application; the command-line interface.                                                                                                |
| onedrive_authorization.py | Various ways to get the access_token and refresh_token for the Microsoft opengraph                                                                 |
| generate_list.py          | Code to generate the list of files and folders, to walk the OneDrive folder tree basically                                                         |
| download_list.py          | Once the file_list.json file is generated, this walks through that file and downloads the items, preserving the file structure as seen on OneDrive |

# Getting Started

```bash
git clone https://github.com/stevemurch/onedrive-download
cd onedrive-download

pip install -r requirements.txt

// Create your Azure app via the portal; search for "app registration"
// be sure to give your Azure app Files.ReadWriteAll permissions
// and use the result to SET THE ENVIRONMENT VARIABLES

export MS_OPENGRAPH_APP_ID=your-app-id
export MS_OPENGRAPH_CLIENT_SECRET=your-client-secret

python start.py
```

This Python utility uses the Microsoft Opengraph API's to traverse the OneDrive folders and download files. The sample code included here begins at `start.py` and includes these basic options:

<img width="1226" alt="image" src="https://user-images.githubusercontent.com/9558478/210688866-4023e131-0d46-41a2-a981-49ca4768f7c8.png">

| Option | What it does                                                                                                                                                                                  |
| ------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| 1      | Generate access_token and refresh_token and save locally.                                                                                                                                     |
| 2      | Using a refresh_token, generate a new access_token                                                                                                                                            |
| 3      | Traverse the folder tree and make a list of folders and files. Two .json files, one containing a list of folders, and another containing a list of files, are saved to your local hard drive. |
| 4      | Walk through the list of files and fetch them one by one, and save to local disk.                                                                                                             |

This is working on a local machine, but does include one hardcoded path to my own "P/Pictures" folder. You'll want to double-check the root path.

## Prerequisites

Written in Python 3.11. Some of the included libraries require 3.1 or above; this will not work in Python 2.x.

The app looks for two key environment variables:

`MS_OPENGRAPH_APP_ID` and

`MS_OPENGRAPH_CLIENT_SECRET`

To generate these, go to the Azure Portal, and type in "app registrations". Create a new app registration, and new client secrets for them. Save these values to your local environment variables.
